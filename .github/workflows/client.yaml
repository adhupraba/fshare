name: Deploy FShare Client

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - client/**
      - .github/workflows/client.yaml
      - docker-compose.prod.yaml

jobs:
  client-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: "${{ secrets.DOCKERHUB_USERNAME }}/fshare-client"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ./client/dockerfile.prod.client
          context: client
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}

      - name: Sync code to server
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_KEY_PASSPHRASE }}
          source: ./docker-compose.prod.yaml
          target: /home/${{ secrets.SERVER_USER }}/fshare/

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_KEY_PASSPHRASE }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/fshare
            docker pull ${{ env.IMAGE_NAME }}:latest
            docker compose -f docker-compose.prod.yaml stop client
            docker compose -f docker-compose.prod.yaml rm -f client
            docker compose -f docker-compose.prod.yaml up -d client
